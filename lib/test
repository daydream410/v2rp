  Future<void> loginNEW() async {
    MsgHeader.loginProcessNEW();
    var status = MsgHeader.status;
    try {
      if (_formKey.currentState!.validate()) {
        if (status.toString() == 'success') {
          Get.snackbar(
            "Success",
            "Logged In",
            colorText: Colors.white,
            icon: Icon(
              Icons.check,
              color: Colors.white,
            ),
            backgroundColor: Colors.green,
            isDismissible: true,
            dismissDirection: DismissDirection.vertical,
          );

          // Get.to(() => Navbar());
          Get.offAll(const Navbar());
          setState(() {
            textControllers.passwordController.value.clear();
          });
        } else if (status.toString() == 'warning') {
          Get.snackbar(
            "Warning",
            "Error Login",
            colorText: Colors.white,
            icon: Icon(
              Icons.warning,
              color: Colors.white,
            ),
            backgroundColor: Colors.red,
            isDismissible: true,
            dismissDirection: DismissDirection.vertical,
          );
        } else {
          Get.snackbar(
            "Please Wait",
            "Connecting To Server...",
            colorText: Colors.white,
            icon: Icon(
              Icons.timer,
              color: Colors.white,
            ),
            backgroundColor: HexColor("#F4A62A"),
            isDismissible: true,
            duration: Duration(seconds: 2),
            dismissDirection: DismissDirection.vertical,
          );
        }
      }
    } catch (e) {
      print(e);
    }
  }